
entity Node {
  id UUID required,
  name String,
  apiUrl String maxlength(1024) required,
  apiKey String required,
  statusCode String maxlength(20) required,
  description TextBlob
  createdAt Instant required,
//  createdByUserId UUID required,
  updatedAt Instant,
//  updatedByUserId UUID,
}



entity Container {
  id UUID required,
  name String,
  walletAddress String required,
  price BigDecimal required,
  statusCode String maxlength(20) required,
  description TextBlob,
  parameters TextBlob required
  createdAt Instant required,
//  createdByUserId UUID required,
  updatedAt Instant,
//  updatedByUserId UUID,
}



entity NodeContainer {
  id UUID required,
//  nodeId UUID required,
//  containerId UUID required,
  statusCode String maxlength(20) required,
  createdAt Instant required,
  updatedAt Instant,
}

entity NodeStatus {
  id UUID required,
//  nodeId UUID required,
  createdAt Instant required,
  lastKeepAliveAt Instant,
}

relationship OneToMany {
  Node{nodeContainer} to NodeContainer{node}
  Container{nodeContainer} to NodeContainer{container}

}

relationship OneToOne {
//  NodeContainer{node} to Node
  NodeStatus{node} to Node{nodeStatus}

//  NodeContainer{container} to Container

  Node{createdByUser} to User with builtInEntity
  Node{updatedByUser} to User with builtInEntity
  Container{createdByUser} to User with builtInEntity
  Container{updatedByUser} to User with builtInEntity
}

dto Node, Container, NodeContainer, NodeStatus with mapstruct

service Node, Container, NodeContainer, NodeStatus with serviceClass

paginate Node, Container, NodeContainer with infinite-scroll
paginate NodeStatus with pagination