
entity Agent {
  id UUID required,
  name String,
  apiUrl String maxlength(1024) required,
  apiKey String required,
  statusCode String maxlength(20) required,
  description TextBlob
  createdAt Instant required,
//  createdByUserId UUID required,
  updatedAt Instant,
//  updatedByUserId UUID,
}



entity Container {
  id UUID required,
  name String,
  walletAddress String required,
  price BigDecimal required,
  statusCode String maxlength(20) required,
  description TextBlob,
  parameters TextBlob required
  createdAt Instant required,
//  createdByUserId UUID required,
  updatedAt Instant,
//  updatedByUserId UUID,
}



entity AgentContainer {
  id UUID required,
//  nodeId UUID required,
//  containerId UUID required,
  statusCode String maxlength(20) required,
  createdAt Instant required,
  updatedAt Instant,
}

entity AgentStatus {
  id UUID required,
//  nodeId UUID required,
  createdAt Instant required,
  lastKeepAliveAt Instant,
}

relationship OneToMany {
  Agent{agentContainer} to AgentContainer{node}
  Container{agentContainer} to AgentContainer{container}

}

relationship OneToOne {
//  NodeContainer{node} to Node
  AgentStatus{agent} to Agent{agentStatus}

//  NodeContainer{container} to Container

  Agent{createdByUser} to User with builtInEntity
  Agent{updatedByUser} to User with builtInEntity
  Container{createdByUser} to User with builtInEntity
  Container{updatedByUser} to User with builtInEntity
}

dto Agent, Container, AgentContainer, AgentStatus with mapstruct

service Agent, Container, AgentContainer, AgentStatus with serviceClass

paginate Agent, Container, AgentContainer with infinite-scroll
paginate AgentStatus with pagination