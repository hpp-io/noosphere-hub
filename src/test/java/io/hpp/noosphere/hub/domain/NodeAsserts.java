package io.hpp.noosphere.hub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NodeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeAllPropertiesEquals(Node expected, Node actual) {
        assertNodeAutoGeneratedPropertiesEquals(expected, actual);
        assertNodeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeAllUpdatablePropertiesEquals(Node expected, Node actual) {
        assertNodeUpdatableFieldsEquals(expected, actual);
        assertNodeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeAutoGeneratedPropertiesEquals(Node expected, Node actual) {
        assertThat(actual)
            .as("Verify Node auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeUpdatableFieldsEquals(Node expected, Node actual) {
        assertThat(actual)
            .as("Verify Node relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getApiUrl()).as("check apiUrl").isEqualTo(expected.getApiUrl()))
            .satisfies(a -> assertThat(a.getApiKey()).as("check apiKey").isEqualTo(expected.getApiKey()))
            .satisfies(a -> assertThat(a.getStatusCode()).as("check statusCode").isEqualTo(expected.getStatusCode()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeUpdatableRelationshipsEquals(Node expected, Node actual) {
        // empty method
    }
}
