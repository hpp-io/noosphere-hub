package io.hpp.noosphere.hub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NodeStatusAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeStatusAllPropertiesEquals(NodeStatus expected, NodeStatus actual) {
        assertNodeStatusAutoGeneratedPropertiesEquals(expected, actual);
        assertNodeStatusAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeStatusAllUpdatablePropertiesEquals(NodeStatus expected, NodeStatus actual) {
        assertNodeStatusUpdatableFieldsEquals(expected, actual);
        assertNodeStatusUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeStatusAutoGeneratedPropertiesEquals(NodeStatus expected, NodeStatus actual) {
        assertThat(actual)
            .as("Verify NodeStatus auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeStatusUpdatableFieldsEquals(NodeStatus expected, NodeStatus actual) {
        assertThat(actual)
            .as("Verify NodeStatus relevant properties")
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getLastKeepAliveAt()).as("check lastKeepAliveAt").isEqualTo(expected.getLastKeepAliveAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNodeStatusUpdatableRelationshipsEquals(NodeStatus expected, NodeStatus actual) {
        assertThat(actual)
            .as("Verify NodeStatus relationships")
            .satisfies(a -> assertThat(a.getNode()).as("check node").isEqualTo(expected.getNode()));
    }
}
