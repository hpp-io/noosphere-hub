package io.hpp.noosphere.hub.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgentStatusAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentStatusAllPropertiesEquals(AgentStatus expected, AgentStatus actual) {
        assertAgentStatusAutoGeneratedPropertiesEquals(expected, actual);
        assertAgentStatusAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentStatusAllUpdatablePropertiesEquals(AgentStatus expected, AgentStatus actual) {
        assertAgentStatusUpdatableFieldsEquals(expected, actual);
        assertAgentStatusUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentStatusAutoGeneratedPropertiesEquals(AgentStatus expected, AgentStatus actual) {
        assertThat(actual)
            .as("Verify AgentStatus auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentStatusUpdatableFieldsEquals(AgentStatus expected, AgentStatus actual) {
        assertThat(actual)
            .as("Verify AgentStatus relevant properties")
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getLastKeepAliveAt()).as("check lastKeepAliveAt").isEqualTo(expected.getLastKeepAliveAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgentStatusUpdatableRelationshipsEquals(AgentStatus expected, AgentStatus actual) {
        assertThat(actual)
            .as("Verify AgentStatus relationships")
            .satisfies(a -> assertThat(a.getAgent()).as("check agent").isEqualTo(expected.getAgent()));
    }
}
